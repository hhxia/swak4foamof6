#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2017 OpenFOAM Foundation
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This program is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful, but
#     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     openfoam4-linux
#
# Description
#     Run script for an OpenFOAM 4 Docker image at:
#     https://hub.docker.com/r/openfoam
#
#------------------------------------------------------------------------------
Script=${0##*/}
VER=4.1

usage () {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat <<USAGE

Usage: ${0##*/} [OPTIONS]
options:
  -d | -dir            host directory mounted (defaults to current directory)
  -b | -build          Build container from local DockerFile (for testing)
  -h | -help           help

Launches the OpenFOAM ${VER} Docker image.
- Requires installation of docker-engine.
- Runs a "containerized" bash shell environment where the user can run OpenFOAM
  and, optionally, ParaView (see below).
- The container mounts the user's file system so that case files are stored
  permanently.  The container mounts the current directory by default, but the
  user can also specify a particular directory using the "-d" option.
- Mounting the user's HOME directory is disallowed.

Example:
To store data in ${HOME}/OpenFOAM/${USER}-${VER}, the user can launch
${Script} either by:
    cd ${HOME}/OpenFOAM/${USER}-${VER} && ${Script}
or
    ${Script} -d ${HOME}/OpenFOAM/${USER}-${VER}

Further Information:
http://openfoam.org/download/4-1-linux

Note:
The container user name appears as "openfoam" but it is just an alias.

USAGE
    exit 1
}

DOCKER_IMAGE='hfdresearch/swak4foamandpyfoam:latest-v4.1'
MOUNT_DIR=$(pwd)

while [ "$#" -gt 0 ]
do
   case "$1" in
   -d | -dir)
      [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
      MOUNT_DIR=$2
      shift 2
      ;;
   -h | -help)
      usage
      ;;
   -b | -build)
       docker build -t ${DOCKER_IMAGE} .
       exit
       ;;
   -*)
      usage "Invalid option '$1'"
      ;;
   *)
      break
      ;;
    esac
done

[ -d "$MOUNT_DIR" ] && \
    MOUNT_DIR=$(cd $MOUNT_DIR && pwd -P) || \
    usage "No directory exists: $MOUNT_DIR"

[ "$MOUNT_DIR" = "$(cd $HOME && pwd -P)" ] && \
    usage "Mount directory cannot be the user's home directory" \
          "Make a subdirectory and run from there, e.g." \
          "    mkdir -p ${HOME}/OpenFOAM/$(whoami)-${VER}" \
          "    ${Script} -d ${HOME}/OpenFOAM/$(whoami)-${VER}"

USER_ID=$(id -u 2> /dev/null)
[ -n "$USER_ID" ] && GROUP_ID=$(id -g) || usage "Cannot determine current user ID"

HOME_DIR='/home/openfoam'

USERNAME=$(id -un)
echo "Launching $0"
echo "User: \"$USERNAME\" (ID $USER_ID, group ID $GROUP_ID)"

docker run -it \
    --rm \
    -e DISPLAY=$DISPLAY \
    -e USER=$USERNAME \
    -u $USER_ID:$GROUP_ID \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v $MOUNT_DIR:$HOME_DIR \
    $DOCKER_IMAGE
